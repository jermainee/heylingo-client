(function () {
    const API_BASE = 'heylingo.de';

    if (!window.location.hostname) {
        console.error("Translation Script: Missing domain");
        return;
    }

    function getSavedLanguage() {
        return localStorage.getItem("selectedLanguage") || "EN";
    }

    function saveLanguage(lang) {
        localStorage.setItem("selectedLanguage", lang);
    }

    function extractTextNodes() {
        let texts = new Set();
        document.querySelectorAll('*:not(script):not(style):not(#languageSwitcher)').forEach(el => {
            if (!el.matches("#languageSwitcher, #languageSwitcher *") && el.childNodes.length === 1 && el.childNodes[0].nodeType === 3) {
                let text = el.textContent.trim();
                if (text.length > 1) {
                    texts.add(text);
                }
            }
        });
        return Array.from(texts);
    }

    function applyTranslations(translations) {
        document.querySelectorAll('*:not(script):not(style)').forEach(el => {
            if (!el.matches("#languageSwitcher, #languageSwitcher *") && el.childNodes.length === 1 && el.childNodes[0].nodeType === 3) {
                let text = el.textContent.trim();
                if (translations[text]) {
                    el.textContent = translations[text];
                }
            }
        });
    }

    function fetchTranslations(lang) {
        const textsToTranslate = extractTextNodes();

        fetch(`https://${API_BASE}/api/translate`, {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify({
                domain: window.location.hostname,
                texts: textsToTranslate,
                target_lang: lang
            })
        })
            .then(response => response.json())
            .then(data => {
                if (data.error) {
                    console.error("Translation API Error:", data.error);
                    return;
                }
                applyTranslations(data.translations);
            })
            .catch(error => console.error("Error fetching translations:", error));
    }

    function fetchAvailableLanguages() {
        fetch(`https://${API_BASE}/api/languages`, {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify({
                domain: window.location.hostname
            })
        })
            .then(response => response.json())
            .then(data => {
                if (data.error) {
                    console.error("Language API Error:", data.error);
                    return;
                }

                if (!localStorage.getItem("selectedLanguage") && data.original_language && data.original_language.code) {
                    saveLanguage(data.original_language.code);
                }

                createLanguageSwitcher(data.target_languages);
            })
            .catch(error => console.error("Error fetching languages:", error));
    }

    function createLanguageSwitcher(languages) {
        const switcher = document.createElement("div");
        switcher.id = "languageSwitcher";
        switcher.style.position = "fixed";
        switcher.style.bottom = "20px";
        switcher.style.right = "20px";
        switcher.style.background = "white";
        switcher.style.border = "1px solid #ddd";
        switcher.style.padding = "10px";
        switcher.style.boxShadow = "0px 2px 10px rgba(0,0,0,0.2)";
        switcher.style.zIndex = "9999";
        switcher.style.borderRadius = "5px";
        switcher.style.color = "black";

        const select = document.createElement("select");
        select.style.padding = "5px";
        select.style.fontSize = "14px";
        select.style.border = "none";
        select.style.outline = "none";

        languages.forEach(lang => {
            const option = document.createElement("option");
            option.value = lang.code;
            option.textContent = lang.name;
            select.appendChild(option);
        });

        select.value = getSavedLanguage();
        select.addEventListener("change", () => {
            saveLanguage(select.value);
            fetchTranslations(select.value);
        });

        switcher.appendChild(select);
        document.body.appendChild(switcher);
    }

    document.addEventListener("DOMContentLoaded", () => {
        fetchAvailableLanguages();
        fetchTranslations(getSavedLanguage());
    });
})();
